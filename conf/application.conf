# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = transit-movements-trader-reference-data-etl

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "config.Module"
play.modules.enabled += "logging.LoggingModule"
play.modules.enabled += "data.DataModules"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"
play.modules.enabled += "data.connector.ConnectorModules"
play.modules.enabled += "scheduler.Module"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key = "kMp6MuH7mo8lfdZpK8pWfdrNb0nuFaibxnJDtMWzXb7TVUKxSTsMqGi3sTqesz0S"

# Session configuration
# ~~~~~
application.session.httpOnly = false
application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes


# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = false
}

# Microservice specific config

auditing {
  enabled = false
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}


microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    customs-reference-data {
      protocol = http
      host = localhost
      port = 9492
      startUrl = "customs-reference-data"
    }

    transit-movements-trader-reference-data {
      protocol = http
      host = localhost
      port = 9482
      startUrl = "transit-movements-trader-reference-data"
    }
  }
}

data {
  stream {
    logging {
      onFailure {
        level = warning
      }
    }
  }
}

mongodb {
  uri = "mongodb://localhost:27017/"${appName}
  locks {
    ttlSeconds = 120
  }
}

schedules {

  ImportData {
    description = "Import reference data"
    expression  = "0_0/1_*_1/1_*_?_*"  # expression every 1 minute, to be overridden in environments
    enabled     = true
  }
}
